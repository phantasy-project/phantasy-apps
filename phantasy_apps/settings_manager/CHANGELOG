Version 9.4: 2021-10-26
=======================

- Support visualize BPM signal saved along with SnapshotData.
- Support database backup, merge, etc.
- Update UIs and resources.

Version 9.3: 2021-10-22
=======================

- Clean up elements.json configuration file, which was used to keep user-customized high-level
  device configurations. Now all the device info should be from phantasy-machines.
- Show disconnected status if the devices are not connected, but are still managed by MachinePortal
  - It will cause caget timeout and freeze the GUI before this fix
  - Show warning dialog if the snashot to load has non-existing devices (usually happened after
    machine reconfiguration), inside the dialog, show the saved settings for reconfigured devices.
- Add filter button for disconnected devices
- Refined feature of settings initialization from loaded lattice
  - Add support to initialize settings for those disconnected devices
  - Add option to skip none settings or not, none is return for non-reachable devices, uncheck
    this option to make settings table for offline devices
- Now "Add Devices" tool only work with adding devices from pre-deployed machine configuartions
  - The field of interest for the high-level element is updated with STRIPPER, SLT device type.
- Ensure the database connection
- Update the configuration file for machine state data fetching (some BPMs are relocated)

Version 9.2: 2021-10-01
=======================

- Implemented app configuration module
  - use settings_manager.toml file to manage all the configurations
  - Runtime change configuration from Preferences dialog
- Add a tool for database management
  - Initialize an empty database
  - Update existing one with snapshot files (Settings Manager in FILE working mode)

Version 9.1: 2021-09-29
=======================

- Support working with SQLite database for snapshot data
  - Also leave option of working with files
- Performance improvement when working with database
  - Use threading to shift data loading
  - Limit number of snapshots to display
  - Lazy-load snapshot table
- Other fixes and enhancements

Version 8.0: 2021-05-14
=======================

- Refactored SnapshotData class to support multi-sheet data
  - Adopt pandas.DataFrame to manage the data
  - Default data format: xlsx
  - Read and save from/to xlsx, h5, csv, etc.
  - Store settings data, metadata for settings data, and machine state data
- Support capture and save machine state data when taking snapshot
- Support save power on/off status data into snapshot
- Support control device power switch via context menu
- Support search snapshot files by note and datetime range

Version 7.1: 2021-04-13
=======================

- Setting View
  - Support to show devices readonly by maintaining hardcode name list
  - Add field of interest for more diagnostic devices
  - Support switch power status via context menu

Version 7.0: 2021-02-22
=======================

- Setting View
  - Support only showing field-of-interest, defined in config/field.toml
  - Support show device power status in a new column
  - Support running with LIVE_MODE environmental variable
  - Do global data refreshing when any filter button is checked
  - F5 (Ctrl+F5) for single data refresher (continuously)
  - Manage all devices in phantasy-machines for ISRC1

- other bug fixes

Version 6.0: 2021-01-19
=======================

- Snapshots Window:
  - Add support to show 'Ca' icon
  - Refactor the snapshot data model --> SnapshotData
    - Create unittests for snapshot data
    - Eliminate 'filepath' attribute
    - Support freely re-organize data directory structure
    - Change default naming rule: eliminate ':' from file name
  - Refactor treeview of snapshot data presentation
    - Create context menu actions to perform snapshot operations
  - Fix duplicated signal emit issue
  - Fix 'wrong index when mapFromSource' issue
  - Rename operation 'cast' to 'Load'
  - Treat empty tags as 'NOTAG' when doing tag filtering
  - Fix wrong hit statistics when doing tag/ion filtering
  - New action to copy snapshot data as a table

- Settings View:
  - Add loose/strict wildcard option for filtering

- Preload default machine and segment when starting up app


Version 5.2: 2020-12-04
=======================

- Snapshots Window:
  - Add Selenium icon
  - Fix window height retaining issue
  - Rename 'Cast' to 'Load'

- Settings Treeview:
  - Fix bug: cannot invert selection from unchecked to checked

Version 5.1: 2020-12-03
=======================

- Settings Treeview:
  - Bugfix: invert selection
  - ENH: dblclick to toggle item selection

- Snapshot Treeview:
  - Update 1st level node style
  - Do not show parent node if no children hit when filtering

Version 5.0: 2020-11-05
=======================

- Single data refresher:
  - Update with multiple processes
  - Not show progress bar

- SettingsModel:
  - Remove CSET and RD PVs, and regarding view aspect

Version 4.3: 2020-10-26
=======================

- Single data refresher:
  - Add support to show progress
  - Improve the GUI responsiveness

- Continuous data refresher:
  - Only do value updating for the items in current view

- SettingsModel:
  - Speed up the model initialization, FRIB/LINAC 6s --> 2s

Version 4.2: 2020-10-19
=======================

- Settings view filtering:
  - Add support to 'in' test to Settings View filtering.
  - Add support compound 'and' filter for settings view.
  - Compare x0 and x2 with precision number.
  - Implement buttons for filtering with dx12, dx02 warning signs.

- Apply settings:
  - Skip setting device if current setting is close to the proposed.

- Fixes:
  - Fix crash when do inverse selection on all checked items.
  - Fix delta x0, x2 updating retarding issue.
  - Hint typoes.

- Scaling factor:
  - Set scaling factor format with '.5g'.

- Maintaince:
  - Update default device sp/rd tolerance list.
  - Always keep set log file.
  - Load elements from config.
  - Update notebook for generating settings files.
  - Support add note meta in contrib notebook for generating settings.
  - Update the notebook to generate settings files for cavity tuning.

- GUI:
  - Hide settings statistics info by default.
  - Update symbol for dx02 and dx12.
  - SettingsModel support 'auto_fmt' argument, '{0:{n}g}' as auto format.
  - Handle the widget control permission for data updaters.
  - Add option to set .{n}g format for presenting data.
  - Add min/max-imize buttons to floating snapshots window.
  - Close device set log by default.

- Tools:
  - Update the command to evoke ipython console.

- Data/FRIB:
  - Update settings data file for cavity tuning.
  - Add generated settings file for 129Xe50 cavity tuning.
  - Add revised settings xlsx file for LS2 phasing.
  - Add setting files for 129Xe27 to 50 from MEBT to FS1A,B, FS2.
  - Add xlsx file for 129Xe27 to 50 for MEBT to FS1A/B, FS2.
  - Add settings with reduced solenoid current, 2020-10-06.
  - Append timestamp to the generated filename.
  - Update settings files for LS1,2 cavity tuning.
  - Add settings files for LS1,2 cavity tuning.

- Doc:
  - Update settings manager guide doc, pdf.
  - Add user guide .doc file.

Version 4.1: 2020-10-01
=======================

- Refactor SnapshotDataModel, w.r.t. the solution to handle buttons in row
- Implement dynamic filter buttons for ion names and tag names to Snapshots
- Add support to delete snapshot from memory or disk drive
- Enable sorting of Snapshots
- Change the naming rule of SnapshotData to avoid name collision
- Other bug fixes and feature enhancements

Version 4.0: 2020-09-25
=======================

- Hide Save and Load Settings tools, use Save and Cast in Snapshots Window instead
- Initialize cofiguration files for new users
- Update values before taking snapshot
- Add x2/x0 column to show the ratio between current setpoint and saved one
- Auto fill scaling factor if loaded snapshot working with different Q/A
- Updated settings view
- Support open Help contents from menu or F1

- Snapshots Window:
  - Support manage data files from a directory, recursively search all possible files
  - Update TableSettings, SnapshotData and SnapshotDataModel to support show more metadata
  - Support in-place saving data
  - Support input tags, golden setting indicator, ion species
  - Keep cast status after taking snapshot or auto refreshing working directory

- Settings Apply:
  - Remove setdone status
  - Implement applying progress bar, and highlight current applying device
  - Support saving snapshot before apply option
  - Show log messages when applying
  - Support Cancel before Apply
  - Update values after applying is done

- Device Set Log Window:
  - Capture all set log when doing settings apply
  - Support open in system text editor, e.g. do searching

Version 3.0: 2020-09-15
=======================

- Initial settings:
  - Add support initialize settings with loaded lattice

- Settings apply:
  - Add support to input math expression as scaling factor
  - Show progress bar when iterating devices

- Snapshots:
  - Add module to manage snapshots from CSV files
  - Ensure fetch the most recent setpoints before taking snapshot
  - Add support to manage snapshots via drag and drop
  - Add support to preload snapshots from working directory (Preferences)
  - Introduced cast feature of snapshot
  - Add support to input metadata to snapshots

- Add tool dialog to fix LS1,2 corrector name issue for old saved CSV files,
  due to the changes of phantasy-machines (commit: 39c94e5)

- Do not need to manually load lattice before load settings from CSV file
